{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../src/index.spec.ts"],"names":[],"mappings":";;AAAA,iCAAmC;AACnC,IAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAExC,IAAM,GAAG,GAAG;IACV,GAAG,EAAE;QACH,SAAS,EAAE;YACT,WAAW,EAAE;gBACX,cAAc,EAAE,MAAM;aACvB;SACF;KACF;CACF,CAAC;AAEF,IAAM,KAAK,GAAG;IACZ,GAAG,EAAE;QACH,MAAM,EAAE;YACN,OAAO,EAAE;gBACP,QAAQ,EAAE,MAAM;aACjB;SACF;KACF;CACF,CAAC;AAEF,QAAQ,CAAC,OAAO,EAAE;IAChB,EAAE,CAAC,eAAe,EAAE;QAClB,IAAM,MAAM,GAAG,eAAY,CAAC,GAAG,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import deepCamelize from \"./index\";\nconst deepEqual = require(\"deep-equal\");\n\nconst obj = {\n  foo: {\n    \"bar-bar\": {\n      \" baz_baFF\": {\n        \"root----ciao\": \"ciao\"\n      }\n    }\n  }\n};\n\nconst match = {\n  foo: {\n    barBar: {\n      bazBaFf: {\n        rootCiao: \"ciao\"\n      }\n    }\n  }\n};\n\ndescribe(\"index\", () => {\n  it(`obj -> result`, () => {\n    const result = deepCamelize(obj);\n    console.log(result);\n\n    expect(deepEqual(result, match)).toEqual(true);\n  });\n});\n"]}